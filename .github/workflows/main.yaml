name: Main Pipeline
run-name: ${{ github.ref }} Release Pipeline ðŸš€
on:
  push:
    branches:
      - main
jobs:
  
  Build-Backend-App:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'gradle'
          cache-dependency-path: |
            www/**/*.gradle*
            www/**/gradle-wrapper.properties

      - name: Make gradlew executable
        run: chmod +x ./www/backend/gradlew

      - name: Build www
        working-directory: ./www/backend
        run: ./gradlew build --no-daemon

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push www-server-image
        uses: docker/build-push-action@v6
        with:
          context: ./www/backend
          file: ./www/backend/prod.dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/www-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Build-Frontend-App:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push www-server-image
        uses: docker/build-push-action@v6
        with:
          context: ./www/frontend
          file: ./www/frontend/prod.dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/www-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Build-Reverse-Proxy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push www-server-image
        uses: docker/build-push-action@v6
        with:
          context: ./reverse-proxy
          file: ./reverse-proxy/prod.dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/reverse-proxy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  Publish-App-Config-Artifacts:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Modify Configs for Production
        run: | 
          sed -i 's|:dev|:latest|g' docker-compose.yaml

      - name: Upload Docker Compose Template to Amazon S3
        run: aws s3 cp ./docker-compose.yaml s3://jhops881-web-server-files/docker-compose.yaml

  Deploy-Infrastructure:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - run: cd ./infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        continue-on-error: false

      - name: Terraform Apply | Deploy Production Infrastructure
        run: terraform apply -input=false tfplan

  Deploy-Apps:
    runs-on: ubuntu-latest
    needs: [Build-Backend-App, Build-Frontend-App, Build-Reverse-Proxy, Publish-App-Config-Artifacts, Deploy-Infrastructure]
    steps:

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure/Update Web Server via SSM
        run: |
          # Get the web server instance ID
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].InstanceId" \
            --output text)

          aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID

          # Run SSM command
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy web stack as ec2-user" \
            --parameters 'commands=[
              "sudo su",
              "cd /home/ec2-user",
              "docker compose down --remove-orphans",
              "sudo docker container prune -f",
              "sudo docker network prune -f",
              "aws s3api get-object --bucket jhops881-web-server-files --key docker-compose.yaml docker-compose.yaml",
              "docker compose pull",
              "docker compose up -d"
            ]' \
            --output text \
            --query "Command.CommandId")

          echo "SSM Command ID: $COMMAND_ID"

          # Wait for command to finish
          aws ssm wait command-executed \
            --instance-id "$INSTANCE_ID" \
            --command-id "$COMMAND_ID"

          echo "âœ… Web stack updated successfully."

